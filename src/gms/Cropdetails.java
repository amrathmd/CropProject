/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gms;

import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.Year;
import java.time.format.DateTimeParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;


/**
 *
 * @author poojitha
 */
public class Cropdetails extends javax.swing.JFrame {
    public String name_of_trail=new String();
    public float plot_size=0;
    public    int number_of_rows=0 ;
    public float net=0;
    public  float gross=0;
    public int num_of_replications=0;
    public java.util.Date date=new java.util.Date() ;

    /**
     * Creates new form Cropdetails
     */
    public Cropdetails() {
        initComponents();
        setLayout(new GridBagLayout());
         pack();
         setLocationRelativeTo(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        bAdd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        bDelete = new javax.swing.JButton();
        bback = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox<>();
        bView = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(154, 227, 232));
        jPanel1.setForeground(new java.awt.Color(102, 102, 102));
        jPanel1.setAutoscrolls(true);

        jPanel2.setBackground(new java.awt.Color(154, 227, 232));

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel1.setText("Crop Details");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(224, 224, 224)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Type of Crop");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Year");

        jRadioButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jRadioButton.setForeground(new java.awt.Color(51, 51, 51));
        jRadioButton.setSelected(true);
        jRadioButton.setText("Ground Nut");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Season");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Kharif", "Rabi", "Zaid" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        bAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bAdd.setForeground(new java.awt.Color(102, 102, 102));
        bAdd.setText("Add");
        bAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Plot size");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText(" Number of rows");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Gross");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Net");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Number of replications");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Name of trail");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText(" Date of sowing");

        bDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bDelete.setForeground(new java.awt.Color(102, 102, 102));
        bDelete.setText("Delete");
        bDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bback.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bback.setForeground(new java.awt.Color(102, 102, 102));
        bback.setText("Back");
        bback.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbackActionPerformed(evt);
            }
        });

        bUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bUpdate.setForeground(new java.awt.Color(102, 102, 102));
        bUpdate.setText("Update");
        bUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel12.setText("(YYYY-MM-DD)");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Initial", "Advanced", "Jumped Dragon" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        bView.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bView.setForeground(new java.awt.Color(102, 102, 102));
        bView.setText("View");
        bView.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bViewActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        jLabel13.setText("(YYYY)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(bView, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(bback, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel12))
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bback, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bView, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        // TODO add your handling code here:
        int result=JOptionPane.showConfirmDialog(this, "Do you really want to update?", "Update Confirmation",JOptionPane.YES_NO_OPTION);
        if(result==JOptionPane.YES_OPTION)
        {
         String season=(String) jComboBox1.getSelectedItem();
         String y=String.valueOf(jTextField6.getText());
        String year= y.trim();
        if(year.isEmpty() || season.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "typeofcrop,year,season field should  not be empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            String season1=getseason(season);
            String id=year+season1;
            String url="jdbc:mysql://localhost:3306/GMS";
            String user="root";
            String pass="Poojitha@123";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection(url, user, pass);
                Statement s=con.createStatement();
                String sql="select * from crops where crop_id='"+id+"'";
                ResultSet rs=s.executeQuery(sql);
                if(rs.next())
                {   
                      boolean checkForValue=initializeValues();
                      if(checkForValue){
                        PreparedStatement ps;
                        ps = (PreparedStatement) con.prepareStatement("update   crops set  name_of_trail=?, plot_size=?, number_of_rows=?, gross=?, net=?, number_Of_replications=?, date_of_sowing=?  where crop_id='"+id+"'");
                        ps.setString(1,name_of_trail);
                        ps.setFloat(2,plot_size);
                        ps.setInt(3,number_of_rows);
                        ps.setFloat(4,gross);
                        ps.setFloat(5,net);
                        ps.setInt(6,num_of_replications);
                        java.sql.Date date1=new java.sql.Date(date.getTime());
                        ps.setDate(7,date1);
                        ps.executeUpdate();
                        setValuesToNone();
                        JOptionPane.showMessageDialog(this, "data Updated sucessfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    }
                      
                     
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"you cannot update,record doesnot exists");
                     
                }
            }
             catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) { 
                 Logger.getLogger(Cropdetails.class.getName()).log(Level.SEVERE, null, ex);
             } 
        }
            
            
        }
        
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbackActionPerformed
        // TODO add your handling code here:
        dispose();
        Dashboard d=new Dashboard();
        d.show();
    }//GEN-LAST:event_bbackActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        String season=(String) jComboBox1.getSelectedItem();
         String y=String.valueOf(jTextField6.getText());
        String year= y.trim();
        if(year.isEmpty() || season.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "typeofcrop,year,season field should  not be empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            String season1=getseason(season);
            String id=year+season1;
             String url="jdbc:mysql://localhost:3306/GMS";
            String user="root";
            String pass="Poojitha@123";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection(url, user, pass);
                Statement s=con.createStatement();
                String sql="select * from crops where crop_id='"+id+"'";
                ResultSet rs=s.executeQuery(sql);
                if(rs.next())
                {
                    deleteFrame d=new deleteFrame(year,season);
                    d.show();
                    
                }
                else
                {
                    JOptionPane.showMessageDialog(this,"No record for entered year and season");
                }
            }catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
        
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        // TODO add your handling code here:
        String typeofcrop;
        
        typeofcrop = jRadioButton.getText();
        String y=String.valueOf(jTextField6.getText());
        String year= y.trim();
        if(!checkYear(year)) JOptionPane.showMessageDialog(this, "Year format is not correct","Error",JOptionPane.ERROR_MESSAGE);
        String season=(String) jComboBox1.getSelectedItem();

        if(typeofcrop.isEmpty()  ||  year.isEmpty() || season.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "typeofcrop,year,season field should  not be empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            String season1=getseason(season);
            String id=year+season1;
            String url="jdbc:mysql://localhost:3306/GMS";
            String user="root";
            String pass="Poojitha@123";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection(url, user, pass);
                Statement s=con.createStatement();
                String sql="select * from crops where crop_id='"+id+"'";
                ResultSet rs=s.executeQuery(sql);
                if(rs.next())
                {
                    JOptionPane.showMessageDialog(this,"record already exists,you cannot add");

                }
                else
                {
                    int year1=Integer.parseInt(year);
                    boolean checkForValue=initializeValues();
                  
                    
                    if(checkForValue){
                    PreparedStatement ps;
                    ps = (PreparedStatement) con.prepareStatement("insert into crops( crop_id,crop_name, name_of_trail, season, year, plot_size, number_of_rows, gross, net, number_Of_replications, date_of_sowing) values(?,?,?,?,?,?,?,?,?,?,?)");

                    ps.setString(1,id);
                    ps.setString(2,typeofcrop);
                    ps.setString(3,name_of_trail);
                    ps.setString(4, season);
                    // ps.setYear(5,year1);
                    //ps.setInt(5, year1.getValue());
                    ps.setInt(5, year1);
                    ps.setFloat(6,plot_size);
                    ps.setInt(7,number_of_rows);
                    ps.setFloat(8,gross);
                    ps.setFloat(9,net);
                    ps.setInt(10,num_of_replications);
                    java.sql.Date date1=new java.sql.Date(date.getTime());
                    ps.setDate(11,date1);

                    ps.executeUpdate();
                    setValuesToNone();
                    JOptionPane.showMessageDialog(this, "data inserted sucessfully","Success",JOptionPane.INFORMATION_MESSAGE);
                    }

                }
            }
            catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(LoginPage.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ParseException ex) {
                Logger.getLogger(Cropdetails.class.getName()).log(Level.SEVERE, null, ex);
            } 

        }

    }//GEN-LAST:event_bAddActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void bViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bViewActionPerformed
        String season=(String) jComboBox1.getSelectedItem();
        
         String y=String.valueOf(jTextField6.getText());
         String year= y.trim();
         if(!checkYear(year)) JOptionPane.showMessageDialog(this, "Year format is not correct","Error",JOptionPane.ERROR_MESSAGE); 
        
        if(year.isEmpty() || season.isEmpty())
        {
            JOptionPane.showMessageDialog(this, "typeofcrop,year,season field should  not be empty","Error",JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            String season1=getseason(season);
            String id=year+season1;
            String url="jdbc:mysql://localhost:3306/GMS";
            String user="root";
            String pass="Poojitha@123";
            try {
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection(url, user, pass);
                Statement s=con.createStatement();
                String sql="select * from crops where crop_id='"+id+"'";
                ResultSet rs=s.executeQuery(sql);
                if(rs.next())
                {   
                    
                    
                    jTextField1.setText(String.valueOf(rs.getFloat(6)));
                    jTextField3.setText(String.valueOf(rs.getInt(7)));
                    jTextField2.setText(String.valueOf(rs.getFloat(8)));
                    jTextField4.setText(String.valueOf(rs.getFloat(9)));
                     jTextField5.setText(String.valueOf(rs.getInt(10)));
                      jTextField7.setText(String.valueOf(rs.getDate(11)));
                      /* int index=0;
                     if(rs.getString(3).compareTo("Initial")==0) index=0;
                     else if(rs.getString(3).compareTo("Advanced")==0) index=1;
                     else if(rs.getString(3).compareTo("Jumped Dragon")==0) index=2;
                     else index=0;*/
                      String trail=rs.getString(3);
                      jComboBox2.setSelectedItem(trail);
                }
                else
            {
                    JOptionPane.showMessageDialog(this, "Record does not exists, please add record","Error",JOptionPane.ERROR_MESSAGE);

                    }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Cropdetails.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Cropdetails.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_bViewActionPerformed
    private boolean check(String text){
        return text.matches("[0-9]*\\.?[0-9]+");
    }
    private String getseason(String season)
    {
       
        if(season.compareTo("Kharif")==0)
            {
                season="01";
            }
            if(season.compareTo("Rabi")==0)
            {
                season="02";
            }
            if(season.compareTo("Zaid")==0)
            {
                season="03";
            }
            return season;
    }
    private boolean initializeValues() throws ParseException
    {   boolean checkForValue=true;
        if(!jTextField1.getText().isEmpty()){
                    if(check(jTextField1.getText()) )
                    {
                        plot_size=Float.parseFloat(jTextField1.getText());
                        
                    }
                    else
                    {
                        checkForValue=false;
                         JOptionPane.showMessageDialog(this, "Plotsize cannot contain characters","Formaterror",JOptionPane.INFORMATION_MESSAGE);
                      
                    }
                    }
                    if(!jTextField3.getText().isEmpty()){
                    if(jTextField3.getText().matches("[0-9]+"))
                    {
                       number_of_rows =Integer.parseInt(jTextField3.getText());
                      
                    }
                    else
                    {
                         checkForValue=false;
                         JOptionPane.showMessageDialog(this, "Rows cannot contain characters","Formaterror",JOptionPane.INFORMATION_MESSAGE);
                        
                    }
                    }
                    if(!jTextField4.getText().isEmpty()){ 
                     if(check(jTextField4.getText()))
                    {
                      
                       net=Float.parseFloat(jTextField4.getText());
                       
                    }
                    else
                    {
                        checkForValue=false;
                         JOptionPane.showMessageDialog(this, "Net cannot contain characters","Formaterror",JOptionPane.INFORMATION_MESSAGE);
                         
                    }
                    }
                    if(!jTextField2.getText().isEmpty()){
                    if(check(jTextField2.getText()))
                    {
                      
                       gross=Float.parseFloat(jTextField2.getText());
             
                    }
                    else
                    {
                        checkForValue=false;
                         JOptionPane.showMessageDialog(this, "Gross cannot contain characters","Formaterror",JOptionPane.INFORMATION_MESSAGE);
                         
                    }
                    }
                    if(!jTextField5.getText().isEmpty())
                    {
                    if(jTextField5.getText().matches("[0-9]+"))
                    {
                      
                       num_of_replications=Integer.parseInt(jTextField5.getText());
                       
                    }
                    else
                    {
                        checkForValue=false;
                         JOptionPane.showMessageDialog(this, "Replications cannot contain characters","Formaterror",JOptionPane.INFORMATION_MESSAGE);
                         
                    }
                    }
                    name_of_trail=(String) jComboBox2.getSelectedItem();
                    DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
                    
                    
                        if(!jTextField7.getText().isEmpty()){
                        String d=jTextField7.getText();
                        if(d.matches("\\d{4}-\\d{2}-\\d{2}")){
                            date = formatter.parse(jTextField7.getText());
                        }else{checkForValue=false;
                            JOptionPane.showMessageDialog(this, "Invalid date format","Format Error",JOptionPane.INFORMATION_MESSAGE);
                            
                        }
                        }return checkForValue;
    }
    private void setValuesToNone(){
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        jTextField4.setText("");
        jTextField5.setText("");
        jTextField6.setText("");
        jTextField7.setText("");
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        
        
    }
    private boolean checkYear(String year)
    {
        return year.length()==4  && year.matches("[0-9]+");
    }
    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cropdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cropdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cropdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cropdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                Cropdetails c=new Cropdetails();
                
               c.setVisible(true);
              
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bUpdate;
    private javax.swing.JButton bView;
    private javax.swing.JButton bback;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    // End of variables declaration//GEN-END:variables
}
