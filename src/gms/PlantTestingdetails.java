/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gms;

import java.sql.Connection;
import java.sql.DriverManager;
import java.text.ParseException;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author poojitha
 */
public class PlantTestingdetails extends javax.swing.JFrame {

    /**
     * Creates new form PlantTestingdetails
     */
    String id;
    String growth_habit=null;
    float  leaflet_size=0;
    String leaflet_color=null;
    String  stem=null;
    String flower_on_mainaxis=null;
     String   flower_on_sidebranches=null;
    String inflorescence=null;
     String pod_reticulation=null; 
     String pod_constriction=null;
     String presence_of_beak=null;
      String  testa_color=null;
      String color_of_testa=null;
      String kernel_shape=null;
      String  fresh_seed_dormancy=null;
       String  kernel_oil_percentage=null;
       String kernel_weight=null;
       int  time_of_maturity=0;
       float shelling_percentage=0;
       String  number_of_kernels=null;
     
     
    
    public PlantTestingdetails(String id) {
        initComponents();
        this.id=id;
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCB1 = new javax.swing.JComboBox<>();
        bAdd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTF5 = new javax.swing.JTextField();
        bDelete = new javax.swing.JButton();
        bback = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bView = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTF13 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jCB3 = new javax.swing.JComboBox<>();
        jCB4 = new javax.swing.JComboBox<>();
        jCB5 = new javax.swing.JComboBox<>();
        jCB7 = new javax.swing.JComboBox<>();
        jCB8 = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jCB9 = new javax.swing.JComboBox<>();
        jCB10 = new javax.swing.JComboBox<>();
        jCB11 = new javax.swing.JComboBox<>();
        jCB12 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jCB13 = new javax.swing.JComboBox<>();
        jCB14 = new javax.swing.JComboBox<>();
        jCB15 = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jCB16 = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jCB17 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jCB18 = new javax.swing.JComboBox<>();
        jTF6 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jPanel1.setBackground(new java.awt.Color(154, 227, 232));
        jPanel1.setForeground(new java.awt.Color(102, 102, 102));
        jPanel1.setAutoscrolls(true);

        jPanel2.setBackground(new java.awt.Color(154, 227, 232));

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel1.setText("Plant Testing Details");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Growth habit");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Leaflet size");

        jCB1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Light green", "Green", "Dark green" }));
        jCB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB1ActionPerformed(evt);
            }
        });

        bAdd.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bAdd.setForeground(new java.awt.Color(102, 102, 102));
        bAdd.setText("Add");
        bAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAddActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Stem");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setText("Flower on main axis");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setText("Flower on side branches");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setText("Inflorescence");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setText("Time of maturity");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setText("Leaflet color");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setText("Pod constriction");

        bDelete.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bDelete.setForeground(new java.awt.Color(102, 102, 102));
        bDelete.setText("Delete");
        bDelete.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        bback.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bback.setForeground(new java.awt.Color(102, 102, 102));
        bback.setText("Back");
        bback.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbackActionPerformed(evt);
            }
        });

        bUpdate.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bUpdate.setForeground(new java.awt.Color(102, 102, 102));
        bUpdate.setText("Update");
        bUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bView.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        bView.setForeground(new java.awt.Color(102, 102, 102));
        bView.setText("View");
        bView.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        bView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bViewActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setText("Presence of beak");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("Pod reticulation");

        jLabel15.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel15.setText("Number of kernels");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel16.setText("Shelling percentage");

        jLabel28.setText("(cm)");

        jCB3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Erect", "Semi-spreading", "Spreading" }));
        jCB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB3ActionPerformed(evt);
            }
        });

        jCB4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Sequential", "Alternate", "Irregular" }));
        jCB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB4ActionPerformed(evt);
            }
        });

        jCB5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Absent", "Shallow", "Medium", "Deep" }));
        jCB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB5ActionPerformed(evt);
            }
        });

        jCB7.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "one Seeded", "two  Seeded", "three Seeded" }));
        jCB7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB7ActionPerformed(evt);
            }
        });

        jCB8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Uniform", "Varigated" }));
        jCB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB8ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Testa color");

        jCB9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Absent", "Present" }));
        jCB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB9ActionPerformed(evt);
            }
        });

        jCB10.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Absent", "Sparse", "Medium" }));
        jCB10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB10ActionPerformed(evt);
            }
        });

        jCB11.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Simple ", "Compound" }));
        jCB11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB11ActionPerformed(evt);
            }
        });

        jCB12.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Present", "Absent" }));
        jCB12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB12ActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel20.setText("Kernel weight of 100 Kernels");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel21.setText("Kernel Shape");

        jLabel27.setText("Days");

        jCB13.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Low (<36g)", "Medium (36-50g)", "High (51-65g)", "Very high (>65g)" }));
        jCB13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB13ActionPerformed(evt);
            }
        });

        jCB14.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Spheroid ", "Cyllindrical", "Fusiform" }));
        jCB14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB14ActionPerformed(evt);
            }
        });

        jCB15.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Absent", "Medium", "Prominent" }));
        jCB15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB15ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Kernel:Colour of testa");

        jCB16.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "White", "Tan", "Rose", "Puple", "Dark Purple", "Salmon", "Red ", "Dark red" }));
        jCB16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB16ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel22.setText("Seed :Fresh seed dormacy");

        jCB17.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Low (<45%)", "Medium (45-48%)", "High (49-52%)", "Very High (>52)" }));
        jCB17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB17ActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel23.setText("Kernel:Oil percentage");

        jCB18.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Present ", "Absent" }));
        jCB18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCB18ActionPerformed(evt);
            }
        });

        jLabel29.setText("Percentage(%)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bView, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTF5, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27))
                    .addComponent(jCB7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB12, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB13, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB5, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB17, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB18, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB11, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB4, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB10, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTF13, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)))
                        .addComponent(bback, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTF6, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel29)))
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTF6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCB17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCB18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bView, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bback, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(70, 70, 70))
        );

        jScrollPane1.setViewportView(jPanel1);

        jScrollPane2.setViewportView(jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jCB18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB18ActionPerformed

    private void jCB17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB17ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB17ActionPerformed

    private void jCB16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB16ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB16ActionPerformed

    private void jCB15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB15ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB15ActionPerformed

    private void jCB14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB14ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB14ActionPerformed

    private void jCB13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB13ActionPerformed

    private void jCB12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB12ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB12ActionPerformed

    private void jCB11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB11ActionPerformed

    private void jCB10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB10ActionPerformed

    private void jCB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB9ActionPerformed

    private void jCB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB8ActionPerformed

    private void jCB7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB7ActionPerformed

    private void jCB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB5ActionPerformed

    private void jCB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB4ActionPerformed

    private void jCB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB3ActionPerformed

    private void bViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bViewActionPerformed
         try {
            Connection con=getConnection();
                Statement s=con.createStatement();
                String sql="select * from planttesting where crop_id='"+id+"'";
                ResultSet rs=s.executeQuery(sql);
                if(rs.next())
                {   
                    jTF5.setText(String.valueOf(rs.getInt(9)));
                     jTF13.setText(String.valueOf(rs.getFloat(3)));
                     jTF6.setText(String.valueOf(rs.getFloat(20)));
                     jCB1.setSelectedItem(finds(rs.getString(4)));
                       jCB3.setSelectedItem(finds(rs.getString(2)));
                     jCB4.setSelectedItem(finds(rs.getString(7)));
                     jCB5.setSelectedItem(finds(rs.getString(10)));
                     jCB7.setSelectedItem(finds(rs.getString(12)));
                     jCB8.setSelectedItem(finds(rs.getString(14)));
                     jCB9.setSelectedItem(finds(rs.getString(6)));
                     jCB11.setSelectedItem(finds(rs.getString(8)));
                     jCB10.setSelectedItem(finds(rs.getString(5)));
                     jCB12.setSelectedItem(finds(rs.getString(13)));
                    jCB13.setSelectedItem(finds(rs.getString(19)));
                    jCB14.setSelectedItem(finds(rs.getString(16)));
                    jCB15.setSelectedItem(finds(rs.getString(11)));
                    jCB16.setSelectedItem(finds(rs.getString(15)));
                    jCB17.setSelectedItem(finds(rs.getString(18)));
                    jCB18.setSelectedItem(finds(rs.getString(17)));
                
                }
                else
            {
                    JOptionPane.showMessageDialog(this, "Record does not exists, please add record","Error",JOptionPane.ERROR_MESSAGE);

                    }
         }
         catch (ClassNotFoundException | SQLException ex) {
            java.util.logging.Logger.getLogger(Cropdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 
        
        
    }//GEN-LAST:event_bViewActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        int result=JOptionPane.showConfirmDialog(this, "Do you really want to update?", "Update Confirmation",JOptionPane.YES_NO_OPTION);
        if(result==JOptionPane.YES_OPTION)
        {
        try {
            Connection con=getConnection();
            Statement s=con.createStatement();
            String sql="select * from planttesting where crop_id='"+id+"'";
            java.sql.ResultSet rs=s.executeQuery(sql);
            if(rs.next())
            {
            boolean checkForValue=initializeValues();
                if(checkForValue){
                    PreparedStatement p;
                    p=(PreparedStatement) con.prepareStatement("update    planttesting  set growth_habit=?,leaflet_size=?,leaflet_color=?,stem=?,flower_on_mainaxis=?,flower_on_sidebranches=?,inflorescence=?,time_of_maturity=?,pod_constriction=?,pod_reticulation=?,number_of_kernels=?,presence_of_beak=?,testa_color=?,color_of_testa=?,kernel_shape=?,fresh_seed_dormancy=?,kernel_oil_percentage=?,kernel_weight=?,shelling_percentage=? ");
                  
                    p.setString(1, growth_habit);
                    p.setFloat(2,leaflet_size);
                    p.setString(3, leaflet_color);
                    p.setString(4, stem);
                    p.setString(5, flower_on_mainaxis);
                    p.setString(6,flower_on_sidebranches);
                    p.setString(7,inflorescence );
                    p.setInt(8, time_of_maturity);
                    p.setString(9, pod_constriction);
                    p.setString(10,pod_reticulation);
                    p.setString(11, number_of_kernels);
                    p.setString(12,presence_of_beak);
                    p.setFloat(19,shelling_percentage);
                    p.setString(13,testa_color);
                    p.setString(14,color_of_testa);
                    p.setString(15, kernel_shape);
                    p.setString(16,fresh_seed_dormancy);
                    p.setString(17,kernel_oil_percentage);
                    p.setString(18,kernel_weight);

                    p.executeUpdate();
                    setValuesToNone();
                    JOptionPane.showMessageDialog(this, "data updated sucessfully","Success",JOptionPane.INFORMATION_MESSAGE);

                }
            }
            else
                {
                    JOptionPane.showMessageDialog(this,"You cannot update, record doesnot exists in planttesting. Please add the details first!");
                     
                }
        }
        catch (ClassNotFoundException | SQLException ex) {
            java.util.logging.Logger.getLogger(Cropdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } 
        catch (ParseException ex) {
            java.util.logging.Logger.getLogger(CropTestingdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    
        } 
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbackActionPerformed
        // TODO add your handling code here:
        dispose();
        CropTesting ct=new CropTesting();
        ct.show();
    }//GEN-LAST:event_bbackActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        deletePlantTesting t=new deletePlantTesting(id);
        t.show();
    }//GEN-LAST:event_bDeleteActionPerformed

    private void bAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAddActionPerformed
        try {
            Connection con=getConnection();
            Statement s=con.createStatement();
            String sql="select * from planttesting where crop_id='"+id+"'";
            java.sql.ResultSet rs=s.executeQuery(sql);
            if(rs.next())
            {
                JOptionPane.showMessageDialog(this,"Record already exists in planttesing testing,you cannot add");

            }
            else
            {
                boolean checkForValue=initializeValues();
                if(checkForValue){
                    PreparedStatement p;
                    p=(PreparedStatement) con.prepareStatement("insert into planttesting (crop_id,growth_habit,leaflet_size,leaflet_color,stem,flower_on_mainaxis,flower_on_sidebranches,inflorescence,time_of_maturity,pod_constriction,pod_reticulation,number_of_kernels,presence_of_beak,testa_color,color_of_testa,kernel_shape,fresh_seed_dormancy,kernel_oil_percentage,kernel_weight,shelling_percentage) values(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)");
                    p.setString(1,id);
                    p.setString(2, growth_habit);
                    p.setFloat(3,leaflet_size);
                    p.setString(4, leaflet_color);
                    p.setString(5, stem);
                    p.setString(6, flower_on_mainaxis);
                    p.setString(7,flower_on_sidebranches);
                    p.setString(8,inflorescence );
                    p.setInt(9, time_of_maturity);
                    p.setString(10, pod_constriction);
                    p.setString(11,pod_reticulation);
                    p.setString(12, number_of_kernels);
                    p.setString(13,presence_of_beak);
                    p.setFloat(20,shelling_percentage);
                    p.setString(14,testa_color);
                    p.setString(15,color_of_testa);
                    p.setString(16, kernel_shape);
                    p.setString(17,fresh_seed_dormancy);
                    p.setString(18,kernel_oil_percentage);
                    p.setString(19,kernel_weight);

                    p.executeUpdate();
                    setValuesToNone();
                    JOptionPane.showMessageDialog(this, "data inserted sucessfully","Success",JOptionPane.INFORMATION_MESSAGE);

                }
            }
        }
        catch (ClassNotFoundException | SQLException ex) {
            java.util.logging.Logger.getLogger(Cropdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(PlantTestingdetails.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bAddActionPerformed

    private void jCB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCB1ActionPerformed

public void setValuesToNone(){
    jTF6.setText("");
    jTF13.setText("");
    jTF5.setText("");
    jCB1.setSelectedIndex(0);
     jCB3.setSelectedIndex(0);
    jCB4.setSelectedIndex(0);
    jCB5.setSelectedIndex(0);
    jCB7.setSelectedIndex(0);
    jCB8.setSelectedIndex(0);
    jCB9.setSelectedIndex(0);
    jCB10.setSelectedIndex(0);
    jCB11.setSelectedIndex(0);
    jCB12.setSelectedIndex(0);
    jCB13.setSelectedIndex(0);
    jCB14.setSelectedIndex(0);
    jCB15.setSelectedIndex(0);
    jCB16.setSelectedIndex(0);
    jCB17.setSelectedIndex(0);
    jCB18.setSelectedIndex(0);
}    
private boolean initializeValues() throws ParseException
    {   boolean checkForValue=true;
        
    if(!jTF5.getText().isEmpty()){
                    if(checkInt(jTF5.getText()) )
                    {
                         time_of_maturity=Integer.parseInt(jTF5.getText());
                        
                    }
                    else
                    {
                        checkForValue=false;
                         JOptionPane.showMessageDialog(this, "Time of maturity cannot contain characters","Formaterror",JOptionPane.INFORMATION_MESSAGE);
                      
                    }
        }
    if(!jTF13.getText().isEmpty()){
                    if(checkFloat(jTF13.getText()) )
                    {
                         leaflet_size=Float.parseFloat(jTF13.getText());
                        
                    }
                    else
                    {
                        checkForValue=false;
                         JOptionPane.showMessageDialog(this, "leaftlet size cannot contain characters","Formaterror",JOptionPane.INFORMATION_MESSAGE);
                      
                    }
        }
    if(!jTF6.getText().isEmpty()){
                    if(checkFloat(jTF6.getText()) )
                    {
                       shelling_percentage=Float.parseFloat(jTF6.getText());
                         
                        
                    }
                    else
                    {
                        checkForValue=false;
                         JOptionPane.showMessageDialog(this, "Shelling percentage cannot contain charecters","Formaterror",JOptionPane.INFORMATION_MESSAGE);
                      
                    }
        }
    
          
                  if(findindex( jCB7.getSelectedIndex()))
         {
             number_of_kernels=null;
         }
         else
         {
             number_of_kernels=(String) jCB7.getSelectedItem();
         }
          if(findindex( jCB13.getSelectedIndex()))
         {
             growth_habit=null;
         }
         else
         {
             growth_habit=(String) jCB13.getSelectedItem();
         }
         if(findindex( jCB1.getSelectedIndex()))
         {
             leaflet_color=null;
         }
         else
         {
             leaflet_color=(String) jCB1.getSelectedItem();
         }
         if(findindex( jCB10.getSelectedIndex()))
         {
             stem=null;
         }
         else
         {
             stem=(String) jCB10.getSelectedItem();
         }
         if(findindex( jCB4.getSelectedIndex()))
         {
               flower_on_sidebranches=null;
         }
         else
         {
               flower_on_sidebranches=(String) jCB4.getSelectedItem();
         }
         if(findindex( jCB11.getSelectedIndex()))
         {
             inflorescence=null;
         }
         else
         {
             inflorescence=(String) jCB11.getSelectedItem();
         }
         if(findindex( jCB9.getSelectedIndex()))
         {
             flower_on_mainaxis=null;
         }
         else
         {
             flower_on_mainaxis=(String) jCB9.getSelectedItem();
         }
         if(findindex( jCB15.getSelectedIndex()))
         {
             pod_reticulation=null;
         }
         else
         {
             pod_reticulation=(String) jCB15.getSelectedItem();
         }
         if(findindex( jCB5.getSelectedIndex()))
         {
                pod_constriction=null;
         }
         else
         {
                pod_constriction=(String) jCB5.getSelectedItem();
         }
         if(findindex( jCB12.getSelectedIndex()))
         {
                 presence_of_beak=null;
         }
         else
         {
                 presence_of_beak=(String) jCB12.getSelectedItem();
         }
          if(findindex( jCB8.getSelectedIndex()))
         {
                   testa_color=null;
         }
         else
         {
                   testa_color=(String) jCB8.getSelectedItem();
         }
          if(findindex( jCB16.getSelectedIndex()))
         {
                   color_of_testa=null;
         }
         else
         {
                    color_of_testa=(String) jCB16.getSelectedItem();
         }
          if(findindex( jCB14.getSelectedIndex()))
         {
                   kernel_shape=null;
         }
         else
         {
                    kernel_shape=(String) jCB14.getSelectedItem();
         }
      if(findindex( jCB18.getSelectedIndex()))
         {
                     fresh_seed_dormancy=null;
         }
         else
         {
                      fresh_seed_dormancy=(String) jCB18.getSelectedItem();
         }
      if(findindex( jCB17.getSelectedIndex()))
         {
                     kernel_oil_percentage=null;
         }
         else
         {
                      kernel_oil_percentage=(String) jCB17.getSelectedItem();
         }
        if(findindex( jCB13.getSelectedIndex()))
         {
                      kernel_weight=null;
         }
         else
         {
                       kernel_weight=(String) jCB17.getSelectedItem();
         }
        return checkForValue;
    
    }
private boolean findindex(int i)
{
        return i==0;
}
private boolean checkFloat(String text){
        return text.matches("[0-9]*\\.?[0-9]+");
    }
    
 public static Connection getConnection()throws SQLException, ClassNotFoundException
    {
         String url="jdbc:mysql://localhost:3306/GMS";
            String user="root";
            String pass="Poojitha@123";
            
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection(url, user, pass);
                return con;
            
    }
 public String finds(String s)
 {
     if(s == null)
     {
         return "Select";
     }
     else
     {
         return s;
     }
 }
private boolean checkInt(String text){
        return text.matches("[0-9]+");
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlantTestingdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlantTestingdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlantTestingdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlantTestingdetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlantTestingdetails().setVisible(true);
            }
        });
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAdd;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bUpdate;
    private javax.swing.JButton bView;
    private javax.swing.JButton bback;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> jCB1;
    private javax.swing.JComboBox<String> jCB10;
    private javax.swing.JComboBox<String> jCB11;
    private javax.swing.JComboBox<String> jCB12;
    private javax.swing.JComboBox<String> jCB13;
    private javax.swing.JComboBox<String> jCB14;
    private javax.swing.JComboBox<String> jCB15;
    private javax.swing.JComboBox<String> jCB16;
    private javax.swing.JComboBox<String> jCB17;
    private javax.swing.JComboBox<String> jCB18;
    private javax.swing.JComboBox<String> jCB3;
    private javax.swing.JComboBox<String> jCB4;
    private javax.swing.JComboBox<String> jCB5;
    private javax.swing.JComboBox<String> jCB7;
    private javax.swing.JComboBox<String> jCB8;
    private javax.swing.JComboBox<String> jCB9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTF13;
    private javax.swing.JTextField jTF5;
    private javax.swing.JTextField jTF6;
    // End of variables declaration//GEN-END:variables
}
